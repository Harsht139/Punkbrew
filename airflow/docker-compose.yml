version: '3.8'

services:
  postgres:
    image: postgres:13
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    restart: always

  redis:
    image: redis:latest
    expose:
      - 6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 50
    restart: always

  airflow-webserver:
    image: apache/airflow:2.5.1
    depends_on:
      - postgres
      - redis
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=true
      - AIRFLOW__CORE__FERNET_KEY=kxCIG4JNPcB3qVhO6_IwvGKIvkaFgBcG4J0opdUuW9g=
      - AIRFLOW__API__AUTH_BACKEND=airflow.api.auth.backend.basic_auth
      - _PIP_ADDITIONAL_PACKAGES=xlsxwriter xlrd pandas openpyxl
    volumes:
      - ./dags:/opt/airflow/dags
      - /home/tappu/data_pipeline/src:/opt/airflow/dags/src:ro
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./config:/opt/airflow/config
    ports:
      - "8080:8080"
    command: webserver
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always

  airflow-scheduler:
    image: apache/airflow:2.5.1
    depends_on:
      - airflow-webserver
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
      - AIRFLOW__CORE__FERNET_KEY=kxCIG4JNPcB3qVhO6_IwvGKIvkaFgBcG4J0opdUuW9g=
      - _PIP_ADDITIONAL_PACKAGES=xlsxwriter xlrd pandas openpyxl
    volumes:
      - ./dags:/opt/airflow/dags
      - /home/tappu/data_pipeline/src:/opt/airflow/dags/src:ro
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./config:/opt/airflow/config
    command: scheduler
    restart: always

  airflow-worker:
    image: apache/airflow:2.5.1
    depends_on:
      - airflow-scheduler
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__CORE__FERNET_KEY=kxCIG4JNPcB3qVhO6_IwvGKIvkaFgBcG4J0opdUuW9g=
      - _PIP_ADDITIONAL_PACKAGES=xlsxwriter xlrd pandas openpyxl
    volumes:
      - ./dags:/opt/airflow/dags
      - /home/tappu/data_pipeline/src:/opt/airflow/dags/src:ro
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./config:/opt/airflow/config
    command: celery worker
    restart: always

  airflow-init:
    image: apache/airflow:2.5.1
    depends_on:
      - postgres
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__FERNET_KEY=kxCIG4JNPcB3qVhO6_IwvGKIvkaFgBcG4J0opdUuW9g=
    command: >
      bash -c '
        airflow db init && \
        airflow users create \
          --username admin \
          --firstname Admin \
          --lastname User \
          --role Admin \
          --email admin@example.com \
          --password admin
      '
    volumes:
      - ./dags:/opt/airflow/dags
      - /home/tappu/data_pipeline/src:/opt/airflow/dags/src:ro
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./config:/opt/airflow/config

volumes:
  postgres-db-volume:
